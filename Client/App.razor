@inject AuthenticationStateProvider AuthenticationStateProvider
<MudSnackbarProvider />
<MudDialogProvider FullWidth="true"
                   DisableBackdropClick="true"
                   CloseButton="true"
                   Position="DialogPosition.Center" />
<MudThemeProvider />
@*<CascadingAuthenticationState>
    <Router OnNavigateAsync="OnNavigation" AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (!context.User.Identity.IsAuthenticated)
                    {

                    }
                    else
                    {
                        <p>You are not authorized to access this resource.</p>
                    }
                </NotAuthorized>

            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>*@
<Router OnNavigateAsync="OnNavigation" AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">

        </RouteView>
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    async Task OnNavigation()
    {
        if (!await localdb.ContainKeyAsync(table.table_user))
        {
            var d = await dialog.Show<DialogAddEmail>("Registration", new DialogOptions() { MaxWidth = MaxWidth.ExtraSmall, CloseButton = false }).Result;
            if (!d.Cancelled)
            {
                var data = (User)d.Data;
                await localdb.SetItemAsync<User>(table.table_user, data);
                nav.NavigateTo(nav.BaseUri, true);
            }
        }

    }
}