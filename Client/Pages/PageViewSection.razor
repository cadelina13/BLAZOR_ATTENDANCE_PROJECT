@page "/sections/{Id}"
@code {
    [Parameter]
    public string Id { get; set; }
    Section sec = new();
    List<Student> studentlist = new();
    List<SectionRecord> sectionRecords;
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    async Task LoadData()
    {
        studentlist = new();
        sectionRecords = new();
        var stdlist = await localdb.GetItemAsync<List<Student>>(table.students);
        sec = (await localdb.GetItemAsync<List<Section>>(table.sections)).Where(x => x.Id == Id).FirstOrDefault();
        sectionRecords = await localdb.GetItemAsync<List<SectionRecord>>($"{table.section_records}{Id}");
        if (sectionRecords == null) sectionRecords = new();
        foreach (var i in sectionRecords)
        {
            var std = stdlist.Where(x => x.Id == i.StudentId).FirstOrDefault();
            studentlist.Add(std);
        }
    }
    async Task OnAddClick()
    {
        var d = await dialog.Show<DialogBrowseStudent>("Student list",
            new DialogParameters() { ["current_studentlist"] = studentlist },
            new DialogOptions() { MaxWidth = MaxWidth.ExtraSmall }).Result;
        if (!d.Cancelled)
        {
            var data = (List<SectionRecord>)d.Data;
            foreach (var i in data)
            {
                i.SectionId = Id;
            }
            sectionRecords.AddRange(data);
            await localdb.SetItemAsync($"{table.section_records}{Id}", sectionRecords);
        }
        await LoadData();
    }

    async Task RemoveStudentClick(string selectedId)
    {
        var d = await dialog.ShowMessageBox("Confirmation", "You are about to remove this student", yesText: "Remove", noText: "Cancel");
        if (d.HasValue && d.Value)
        {
            var a = sectionRecords.Where(x => x.StudentId == selectedId).FirstOrDefault();
            sectionRecords.Remove(a);
            await localdb.SetItemAsync($"{table.section_records}{Id}", sectionRecords);
            await LoadData();
        }

    }
}

<MudToolBar Dense Class="mb-3 p-0">
    <MudButton OnClick="@(()=> nav.NavigateTo("/sections"))" StartIcon="@Icons.Rounded.ArrowBackIos" Size="Size.Small" Color="Color.Primary">Back</MudButton>
    <MudSpacer />
</MudToolBar>
<div class="row">
    <div class="col-md-12">
        <MudPaper Class="p-3 mb-3" Elevation="25">
            <MudToolBar Dense Class="mb-3 p-0">
                <MudText Typo="Typo.h4">@sec.Name</MudText>
                <MudSpacer />
                <MudTooltip Text="Browse Student" Placement="Placement.Start">
                    <MudIconButton OnClick="OnAddClick" Variant="Variant.Filled" Icon="@Icons.Rounded.PersonAdd" Color="Color.Primary" Size="Size.Small" />
                </MudTooltip>
            </MudToolBar>
            <MudTable Outlined Items="studentlist" T="Student" SortLabel="Sort by" Hover Dense>
                <HeaderContent>
                    <MudTh><MudTableSortLabel SortBy="new Func<Student, object>(x=>x.FistName)">First Name</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Student, object>(x=>x.LastName)">Last Name</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortBy="new Func<Student, object>(x=>x.ParentsPhoneNumber)">Parent's Contact</MudTableSortLabel></MudTh>
                    <MudTh Style="width:1%">*</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Fist Name">@context.FistName</MudTd>
                    <MudTd DataLabel="Last Name">@context.LastName</MudTd>
                    <MudTd DataLabel="Parent's Contact">@context.ParentsPhoneNumber</MudTd>
                    <MudTd>
                        <MudIconButton Size="Size.Small" Color="Color.Secondary" Icon="@Icons.Rounded.Close" Class="p-1" />
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new int[]{50, 100}" />
                </PagerContent>
            </MudTable>

        </MudPaper>
    </div>
</div>

