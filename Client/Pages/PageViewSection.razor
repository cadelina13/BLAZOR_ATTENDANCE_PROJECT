@page "/sections/{sectionId}"
@code {
    [Parameter]
    public string sectionId { get; set; }
    Section sec = new();
    List<Subject> listofsubjects = new();
    List<SubjectRecord> records = new();
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    async Task LoadData()
    {
        sec = (await db.GetList<Section>(table.table_section)).Where(x => x.Id == sectionId).FirstOrDefault();
        listofsubjects = (await db.GetList<Subject>(table.table_subject)).Where(x=>x.SectionId == sectionId).ToList();
        records = await db.GetList<SubjectRecord>(table.table_subject_record);
    }
    async Task OnAddClick()
    {
        var d = await dialog.Show<DialogAddSubject>("Add subject",
            new DialogOptions() { MaxWidth = MaxWidth.ExtraSmall }).Result;
        if (!d.Cancelled)
        {
            var all = await db.GetList<Subject>(table.table_subject);
            var data = (Subject)d.Data;
            data.SectionId = sectionId;
            if (all == null) all = new();
            all.Add(data);
            await db.SaveRecord<List<Subject>>(table.table_subject, all);
            snackbar.Add($"{data.SubjectName} successfully added to the list.");
        }
        await LoadData();
    }

    async Task RemoveStudentClick(string selectedId)
    {
        var d = await dialog.ShowMessageBox("Confirmation", "You are about to remove this student", yesText: "Remove", noText: "Cancel");
        if (d.HasValue && d.Value)
        {

            await LoadData();
        }

    }

}

<MudToolBar Dense Class="mb-3 p-0">
    <MudButton OnClick="@(()=> nav.NavigateTo("/sections"))" StartIcon="@Icons.Rounded.ArrowBackIos" Size="Size.Small" Color="Color.Primary">Back</MudButton>
    <MudSpacer />
    <MudButton OnClick="OnAddClick" StartIcon="@Icons.Rounded.Edit" Size="Size.Small" Color="Color.Primary" Variant="Variant.Filled" >Add Subject</MudButton>
</MudToolBar>
<MudPaper Elevation="25" Class="p-3">
    <MudText Typo="Typo.h5" Class="mb-3" Color="Color.Primary">@sec.Name</MudText>
    <div class="row">
        @foreach (var i in listofsubjects)
        {
            var stdcount = records.Where(x => x.SubjectId == i.Id).Count();
            <div class="col-md-3">
                <MudPaper Outlined Class="p-3 m-1">
                    <MudText Typo="Typo.h6">@i.SubjectName</MudText>
                    @if (stdcount <= 1)
                    {
                        <MudText Typo="Typo.caption">@stdcount student</MudText>
                    }
                    else
                    {
                        <MudText Typo="Typo.caption">@stdcount students</MudText>
                    }
                    <MudButton OnClick="@(()=> nav.NavigateTo($"{nav.BaseUri}sections/{sectionId}/{i.Id}"))" Class="mt-3" DisableElevation Variant="Variant.Filled" Size="Size.Small" Color="Color.Primary" FullWidth>View</MudButton>
                </MudPaper>
            </div>
        }
    </div>
</MudPaper>


