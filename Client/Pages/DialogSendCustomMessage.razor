@using Newtonsoft.Json
@using System.Net.Http.Headers
@inject HttpClient http
@code {
    private static readonly string apiKey = "1vI6Ri0Ek3oAriAOlmKakibB9Lb";
    private static readonly string apiSecret = "LQpj7KEpoyaUgHjqw8xuZ43sgxAF3y14Kuh9nF0t";

    [CascadingParameter] MudDialogInstance _mudDialog { get; set; }
    [Parameter]
    public Subject sub { get; set; }
    [Parameter]
    public DateTime selectedDate { get; set; }
    [Parameter]
    public string selectedTime { get; set; }
    [Parameter]
    public List<AttendanceRecord> listabsent { get; set; }
    [Parameter]
    public List<Student> studentlist { get; set; }

    CustomMessage msg = new();
    User user;

    protected override async Task OnInitializedAsync()
    {
        if (!await localdb.ContainKeyAsync("custom_message"))
            await localdb.SetItemAsync("custom_message", msg);
        user = await localdb.GetItemAsync<User>(table.table_user);
        user = await _db.GetUser(user.Email);

        msg = await localdb.GetItemAsync<CustomMessage>("custom_message");
        if (string.IsNullOrEmpty(msg.Message))
            msg.Message = WebHeader.MESSAGE_PLACEHOLDER;
        msg.Message = msg.Message.Replace("#subject#", sub.SubjectName);
    }
    bool IsSaving = false;
    async Task Submit()
    {
        if(user.SMS == 0)
        {
            snackbar.Add("Insufficient balance.");
            return;
        }
        IsSaving = true;
        var data = new SendSMSViewModel();
        data.listabsent = listabsent;
        data.selectedDate = selectedDate;
        data.selectedTime = selectedTime;
        data.sub = sub;
        data.msg = msg;
        await _db.SendCustomSMS(data);
        IsSaving = false;
        _mudDialog.Close(DialogResult.Ok(true));


    }
    void Cancel() => _mudDialog.Cancel();
}

<MudDialog>
    <DialogContent>
        @if (user == null)
        {
            <MudProgressLinear Color="Color.Primary" Size="Size.Small" Indeterminate/>
        }
        <MudText Typo="Typo.body1">@msg.Message</MudText>
        <hr />
        <MudText Color="Color.Primary" Typo="Typo.body1">Subject Schedule</MudText>
        <MudText Typo="Typo.caption">Date: @selectedDate.ToString("MMMM dd, yyyy")</MudText><br />
        <MudText Typo="Typo.caption">Time: @selectedTime.ToString()</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton StartIcon="@Icons.Rounded.Close" Variant="Variant.Text" Color="Color.Default" Size="Size.Small" OnClick="Cancel">Cancel</MudButton>
        <MudButton Disabled="user == null" StartIcon="@Icons.Rounded.Send" Variant="Variant.Text" Color="Color.Primary" Size="Size.Small" OnClick="Submit">Send</MudButton>
    </DialogActions>
</MudDialog>
