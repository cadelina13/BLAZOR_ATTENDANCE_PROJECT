@code {
    [CascadingParameter] MudDialogInstance _mudDialog { get; set; }
    User data = new();
    bool isSaving = false;
    async void Submit()
    {
        isSaving = true;
        var user = await _db.RegisterEmail(data.Email);
        if (!string.IsNullOrEmpty(user.Email))
        {
            await localdb.SetItemAsync<User>(table.table_user, user);
            _mudDialog.Close(DialogResult.Ok(data));
        }
        isSaving = false;
    }
    void Cancel() => _mudDialog.Cancel();
}

<MudDialog>
    <DialogContent>
        <MudTextField InputType="InputType.Email" InputMode="InputMode.email" Immediate @bind-Value="data.Email" Label="Email" Variant="Variant.Outlined" Lines="1" />
    </DialogContent>
    <DialogActions>
        <MudButton StartIcon="@Icons.Rounded.Save" Disabled="@(string.IsNullOrEmpty(data.Email) || isSaving)" Variant="Variant.Text" Color="Color.Primary" Size="Size.Small" OnClick="Submit">Register</MudButton>
    </DialogActions>
</MudDialog>
